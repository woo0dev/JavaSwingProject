
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.Vector;
import javax.swing.JTabbedPane;
import javax.swing.JTextArea;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author woo
 */
public class MainFrame extends javax.swing.JFrame {

    DB_MAN DBM = new DB_MAN();
    String strSQL = "Select * from CarInfo";

    
    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        try {
            DBM.dbOpen();
            setTableFromDB(strSQL);
            DBM.dbClose();
        } catch (Exception e) {
            System.out.println("SQLException : " + e.getMessage());
        }
        

    }
    
    public String makeSQLWhere(String strQuery) {
        switch(comboSelect.getSelectedIndex()) {
            case 0:
                strQuery += " Where No = '" + selectProductCode.getText() + "'";
                break;
            case 1:
                strQuery += " Where Type = '" + selectProductName.getText() + "'";
                break;
            case 2:
                strQuery += " Where Displacement = '" + selectProductPrice.getText() + "'";
                break;
            case 3:
                strQuery += " Where Performance between '" + selectPurchaseDateStart.getText() + "' and '" + selectPurchaseDateEnd.getText() + "'";
                break;
            default:
                strQuery += "Select * from CarInfo";
                break;
        }
        return strQuery;
    }
    
    public void setTableFromDB(String strQuery) {
        int iCntRow = 0;
        try{
            DBM.DB_rs = DBM.DB_stmt.executeQuery(strSQL);
            while(DBM.DB_rs.next()) {
                tableList.setValueAt(DBM.DB_rs.getString("No"), iCntRow, 0);
                tableList.setValueAt(DBM.DB_rs.getString("Type"), iCntRow, 1);
                tableList.setValueAt(DBM.DB_rs.getString("Displacement"), iCntRow, 2);
                tableList.setValueAt(DBM.DB_rs.getString("Performance"), iCntRow, 3);
                tableList.setValueAt(DBM.DB_rs.getString("Price"), iCntRow, 4);
                tableList.setValueAt(DBM.DB_rs.getString("Price"), iCntRow, 5);
                iCntRow++;
            }
            DBM.DB_rs.close();
        } catch(Exception e) {
            System.out.println("SQLException : " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel2 = new javax.swing.JPanel();
        panelIncomeExpenditure = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        txtProductCode = new javax.swing.JTextField();
        txtProductName = new javax.swing.JTextField();
        txtProductPrice = new javax.swing.JTextField();
        btnPurchase = new javax.swing.JButton();
        btnSale = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableList = new javax.swing.JTable();
        labelProductCode = new javax.swing.JLabel();
        labelProductName = new javax.swing.JLabel();
        labelProductPrice = new javax.swing.JLabel();
        labelQuantity = new javax.swing.JLabel();
        labelCurrentDate = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        txtCurrentDate = new javax.swing.JTextField();
        panelAssets = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tableAssets = new javax.swing.JTable();
        panelHRM = new javax.swing.JPanel();
        panelSalary = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableIncome = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableExpenditure = new javax.swing.JTable();
        btnSelect = new javax.swing.JButton();
        selectLabelProductCode = new javax.swing.JLabel();
        selectProductCode = new javax.swing.JTextField();
        selectLabelPurchaseDate = new javax.swing.JLabel();
        selectPurchaseDateStart = new javax.swing.JTextField();
        selectLabelProductName = new javax.swing.JLabel();
        selectProductName = new javax.swing.JTextField();
        selectPurchaseDateEnd = new javax.swing.JTextField();
        selectLabelProductPrice = new javax.swing.JLabel();
        selectProductPrice = new javax.swing.JTextField();
        comboSelect = new javax.swing.JComboBox<>();

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("jRadioButtonMenuItem1");

        jMenu1.setText("jMenu1");

        jMenuItem1.setText("jMenuItem1");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnPurchase.setText("구매");
        btnPurchase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPurchaseActionPerformed(evt);
            }
        });

        btnSale.setText("판매");
        btnSale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaleActionPerformed(evt);
            }
        });

        tableList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "상품코드", "상품명", "상품단가", "수량", "날짜", "구분"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableList);

        labelProductCode.setText("상품코드");

        labelProductName.setText("상품명");

        labelProductPrice.setText("상품단가");

        labelQuantity.setText("수량");

        labelCurrentDate.setText("현재날짜");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(labelProductName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(labelProductPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(labelCurrentDate, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelProductCode, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtQuantity)
                            .addComponent(txtCurrentDate)
                            .addComponent(txtProductCode)
                            .addComponent(txtProductName)
                            .addComponent(txtProductPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 241, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnPurchase, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSale, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnPurchase, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtProductCode)
                    .addComponent(labelProductCode, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnSale, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtProductName)
                    .addComponent(labelProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelProductPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtProductPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtQuantity)
                    .addComponent(labelQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labelCurrentDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtCurrentDate, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(206, Short.MAX_VALUE))
        );

        panelIncomeExpenditure.addTab("구매/판매", jPanel1);

        tableAssets.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "자본금", "상품코드", "상품명", "상품원가", "상품현재가격", "감가상감", "수량", "구입일자"
            }
        ));
        jScrollPane4.setViewportView(tableAssets);

        javax.swing.GroupLayout panelAssetsLayout = new javax.swing.GroupLayout(panelAssets);
        panelAssets.setLayout(panelAssetsLayout);
        panelAssetsLayout.setHorizontalGroup(
            panelAssetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAssetsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 956, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelAssetsLayout.setVerticalGroup(
            panelAssetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAssetsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 958, Short.MAX_VALUE)
                .addContainerGap())
        );

        panelIncomeExpenditure.addTab("자산", panelAssets);
        panelAssets.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout panelHRMLayout = new javax.swing.GroupLayout(panelHRM);
        panelHRM.setLayout(panelHRMLayout);
        panelHRMLayout.setHorizontalGroup(
            panelHRMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 990, Short.MAX_VALUE)
        );
        panelHRMLayout.setVerticalGroup(
            panelHRMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 988, Short.MAX_VALUE)
        );

        panelIncomeExpenditure.addTab("인사", panelHRM);

        javax.swing.GroupLayout panelSalaryLayout = new javax.swing.GroupLayout(panelSalary);
        panelSalary.setLayout(panelSalaryLayout);
        panelSalaryLayout.setHorizontalGroup(
            panelSalaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 990, Short.MAX_VALUE)
        );
        panelSalaryLayout.setVerticalGroup(
            panelSalaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 988, Short.MAX_VALUE)
        );

        panelIncomeExpenditure.addTab("급여", panelSalary);

        tableIncome.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "상품코드", "상품명", "상품단가", "수량", "구입일자", "구분"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tableIncome);

        tableExpenditure.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "상풐코드", "상품명", "상품단가", "수량", "판매일자", "구분"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tableExpenditure);

        btnSelect.setText("조회");
        btnSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectActionPerformed(evt);
            }
        });

        selectLabelProductCode.setText("상품코드");

        selectLabelPurchaseDate.setText("날짜");

        selectLabelProductName.setText("상품명");

        selectLabelProductPrice.setText("상품단가");

        comboSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "상품코드", "상품명", "상품단가", "날짜" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 956, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(selectLabelProductCode)
                                .addGap(18, 18, 18)
                                .addComponent(selectProductCode))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(selectLabelPurchaseDate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(selectPurchaseDateStart, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(selectPurchaseDateEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(comboSelect, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(selectLabelProductName)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(selectProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(selectLabelProductPrice)
                                .addGap(18, 18, 18)
                                .addComponent(selectProductPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectLabelProductCode)
                    .addComponent(selectProductCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectLabelProductName)
                    .addComponent(selectProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectLabelProductPrice)
                    .addComponent(selectProductPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectLabelPurchaseDate)
                    .addComponent(selectPurchaseDateStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectPurchaseDateEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        panelIncomeExpenditure.addTab("수입/지출", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelIncomeExpenditure)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelIncomeExpenditure)
                .addContainerGap())
        );

        panelIncomeExpenditure.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPurchaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPurchaseActionPerformed
        // TODO add your handling code here:
        int iCntRow = 0;
        
        iCntRow = tableList.getRowCount();
        for (int idx = 0; idx < tableList.getRowCount(); idx++ ) {
            if (tableList.getValueAt(idx, 0) == null) {
                iCntRow = idx;
                break;
            }
        }
        tableList.setValueAt(txtProductCode.getText(), iCntRow, 0);
        tableList.setValueAt(txtProductName.getText(), iCntRow, 1);
        tableList.setValueAt(txtProductPrice.getText(), iCntRow, 2);
        tableList.setValueAt(txtQuantity.getText(), iCntRow, 3);
        tableList.setValueAt(txtCurrentDate.getText(), iCntRow, 4);
        tableList.setValueAt("구매", iCntRow, 5);
        
        TableRowSorter<TableModel> sorter = new TableRowSorter<>(tableList.getModel());
        tableList.setRowSorter(sorter);
        List<RowSorter.SortKey> sortKeys = new ArrayList<>();
 
        int columnIndexToSort = 0;
        sortKeys.add(new RowSorter.SortKey(columnIndexToSort, SortOrder.DESCENDING));
 
        sorter.setSortKeys(sortKeys);
        sorter.sort();
        
        for(int idx = 0; idx < tableList.getRowCount(); idx++) {
            if(tableList.getValueAt(idx, 0) != null)
                tableList.setValueAt(tableList.getValueAt(idx, 0), idx, 0);
            else
                break;
        }
        
        strSQL = "Insert Into CarInfo Values (";
        strSQL += "'" + txtProductCode.getText() + "', ";
        strSQL += "'" + txtProductName.getText() + "', ";
        strSQL += "'" + txtProductPrice.getText() + "', ";
        strSQL += "'" + txtQuantity.getText() + "', ";
        strSQL += "'" + txtCurrentDate.getText() + "', ";
        strSQL += "'구매')";
        try {
            DBM.dbOpen();
            DBM.DB_stmt.executeUpdate(strSQL);
            strSQL = "Select * from CarInfo";
            setTableFromDB(strSQL);
            DBM.dbClose();
        } catch (Exception e) {
            System.out.println("SQLException : " + e.getMessage());
        }
        
    }//GEN-LAST:event_btnPurchaseActionPerformed

    private void btnSaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaleActionPerformed
        // TODO add your handling code here:
        int iCntRow = 0;
        iCntRow = tableList.getSelectedRow();
        
//        for(int idx = 0; idx < tableList.getColumnCount(); idx++) {
//            tableList.setValueAt(null, iCntRow, idx);
//        }
//        
//        txtProductCode.setText(null);
//        txtProductName.setText(null);
//        txtProductPrice.setText(null);
//        txtQuantity.setText(null);
//        txtCurrentDate.setText(null);

        for (int idx = 0; idx < tableList.getRowCount(); idx++ ) {
            if (tableList.getValueAt(idx, 0) == null) {
                iCntRow = idx;
                break;
            }
        }
        tableList.setValueAt(txtProductCode.getText(), iCntRow, 0);
        tableList.setValueAt(txtProductName.getText(), iCntRow, 1);
        tableList.setValueAt(txtProductPrice.getText(), iCntRow, 2);
        tableList.setValueAt(txtQuantity.getText(), iCntRow, 3);
        tableList.setValueAt(txtCurrentDate.getText(), iCntRow, 4);
        tableList.setValueAt("판매", iCntRow, 5);

        TableRowSorter<TableModel> sorter = new TableRowSorter<>(tableList.getModel());
        tableList.setRowSorter(sorter);
        List<RowSorter.SortKey> sortKeys = new ArrayList<>();
 
        int columnIndexToSort = 0;
        sortKeys.add(new RowSorter.SortKey(columnIndexToSort, SortOrder.DESCENDING));
 
        sorter.setSortKeys(sortKeys);
        sorter.sort();
        
        strSQL = "Insert Into CarInfo Values (";
        strSQL += "'" + txtProductCode.getText() + "', ";
        strSQL += "'" + txtProductName.getText() + "', ";
        strSQL += "'" + txtProductPrice.getText() + "', ";
        strSQL += "'" + txtQuantity.getText() + "', ";
        strSQL += "'" + txtCurrentDate.getText() + "', ";
        strSQL += "'판매')";
        try {
            DBM.dbOpen();
            DBM.DB_stmt.executeUpdate(strSQL);
            strSQL = "Select * from CarInfo";
            setTableFromDB(strSQL);
            DBM.dbClose();
        } catch (Exception e) {
            System.out.println("SQLException : " + e.getMessage());
        }

    }//GEN-LAST:event_btnSaleActionPerformed

    private void btnSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectActionPerformed
        // TODO add your handling code here:
        
        strSQL = "Select * from CarInfo ";
        strSQL = makeSQLWhere(strSQL);
        int iCntRow = 0;
        try{
            DBM.dbOpen();
            DBM.DB_rs = DBM.DB_stmt.executeQuery(strSQL);
            while(DBM.DB_rs.next()) {
                tableIncome.setValueAt(DBM.DB_rs.getString("No"), iCntRow, 0);
                tableIncome.setValueAt(DBM.DB_rs.getString("Type"), iCntRow, 1);
                tableIncome.setValueAt(DBM.DB_rs.getString("Displacement"), iCntRow, 2);
                tableIncome.setValueAt(DBM.DB_rs.getString("Performance"), iCntRow, 3);
                tableIncome.setValueAt(DBM.DB_rs.getString("Price"), iCntRow, 4);
                tableIncome.setValueAt(DBM.DB_rs.getString("Price"), iCntRow, 5);
                iCntRow++;
            }
            DBM.DB_rs.close();
            DBM.dbClose();
        } catch(Exception e) {
            System.out.println("SQLException : " + e.getMessage());
        }
        

//        TableRowSorter<TableModel> sorterExpenditure = new TableRowSorter<>(tableExpenditure.getModel());
//        tableExpenditure.setRowSorter(sorterExpenditure);
//        List<RowSorter.SortKey> sortKeysExpenditure = new ArrayList<>();
// 
//        int columnIndexToSortExpenditure = 0;
//        sortKeysExpenditure.add(new RowSorter.SortKey(columnIndexToSortExpenditure, SortOrder.DESCENDING));
// 
//        sorterExpenditure.setSortKeys(sortKeysExpenditure);
//        sorterExpenditure.sort();
//        
//        
//        
//        TableRowSorter<TableModel> sorterIncome = new TableRowSorter<>(tableIncome.getModel());
//        tableIncome.setRowSorter(sorterIncome);
//        List<RowSorter.SortKey> sortKeysIncome = new ArrayList<>();
// 
//        int columnIndexToSortIncome = 0;
//        sortKeysIncome.add(new RowSorter.SortKey(columnIndexToSortIncome, SortOrder.DESCENDING));
// 
//        sorterIncome.setSortKeys(sortKeysIncome);
//        sorterIncome.sort();
    }//GEN-LAST:event_btnSelectActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }
    



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPurchase;
    private javax.swing.JButton btnSale;
    private javax.swing.JButton btnSelect;
    private javax.swing.JComboBox<String> comboSelect;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel labelCurrentDate;
    private javax.swing.JLabel labelProductCode;
    private javax.swing.JLabel labelProductName;
    private javax.swing.JLabel labelProductPrice;
    private javax.swing.JLabel labelQuantity;
    private javax.swing.JPanel panelAssets;
    private javax.swing.JPanel panelHRM;
    private javax.swing.JTabbedPane panelIncomeExpenditure;
    private javax.swing.JPanel panelSalary;
    private javax.swing.JLabel selectLabelProductCode;
    private javax.swing.JLabel selectLabelProductName;
    private javax.swing.JLabel selectLabelProductPrice;
    private javax.swing.JLabel selectLabelPurchaseDate;
    private javax.swing.JTextField selectProductCode;
    private javax.swing.JTextField selectProductName;
    private javax.swing.JTextField selectProductPrice;
    private javax.swing.JTextField selectPurchaseDateEnd;
    private javax.swing.JTextField selectPurchaseDateStart;
    private javax.swing.JTable tableAssets;
    private javax.swing.JTable tableExpenditure;
    private javax.swing.JTable tableIncome;
    private javax.swing.JTable tableList;
    private javax.swing.JTextField txtCurrentDate;
    private javax.swing.JTextField txtProductCode;
    private javax.swing.JTextField txtProductName;
    private javax.swing.JTextField txtProductPrice;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables
}
